// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/Health": {
            "put": {
                "description": "Retrieve an Health by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Retrieve Health by ID",
                "parameters": [
                    {
                        "description": "Edit Health",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/interfaces.InputHealthEdit"
                        }
                    },
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Auth Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Health Details",
                        "schema": {
                            "$ref": "#/definitions/db.Health"
                        }
                    }
                }
            }
        },
        "/api/all-finances": {
            "get": {
                "description": "Retrieve all Finances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Finances"
                ],
                "summary": "Retrieve All Finances",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Auth Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of All Finances",
                        "schema": {
                            "$ref": "#/definitions/db.Finances"
                        }
                    }
                }
            }
        },
        "/api/all-health": {
            "get": {
                "description": "Retrieve all health",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Retrieve All health",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Auth Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of All Health",
                        "schema": {
                            "$ref": "#/definitions/db.Health"
                        }
                    }
                }
            }
        },
        "/api/all-mental": {
            "get": {
                "description": "Retrieve all Mental",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mental"
                ],
                "summary": "Retrieve All Mental",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Auth Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of All Mental",
                        "schema": {
                            "$ref": "#/definitions/db.Mental"
                        }
                    }
                }
            }
        },
        "/api/all-user": {
            "get": {
                "description": "Retrieve all User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Retrieve All User",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Auth Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of All User",
                        "schema": {
                            "$ref": "#/definitions/db.User"
                        }
                    }
                }
            }
        },
        "/api/all-welfare": {
            "get": {
                "description": "Retrieve all welfare",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Welfare"
                ],
                "summary": "Retrieve All welfare",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Auth Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of All welfare",
                        "schema": {
                            "$ref": "#/definitions/db.Welfare"
                        }
                    }
                }
            }
        },
        "/api/bmi": {
            "get": {
                "description": "Check your bmi",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "BMI Checker",
                "parameters": [
                    {
                        "description": "BMI :)",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/interfaces.InputBMI"
                        }
                    },
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Auth Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Details",
                        "schema": {
                            "$ref": "#/definitions/db.User"
                        }
                    }
                }
            }
        },
        "/api/finances": {
            "put": {
                "description": "Retrieve an Finances by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Finances"
                ],
                "summary": "Retrieve Finances by ID",
                "parameters": [
                    {
                        "description": "Edit Finances",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/interfaces.InputFinancesEdit"
                        }
                    },
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Auth Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Finances Details",
                        "schema": {
                            "$ref": "#/definitions/db.Finances"
                        }
                    }
                }
            },
            "post": {
                "description": "Create New Finances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Finances"
                ],
                "summary": "Create New Finances",
                "parameters": [
                    {
                        "description": "Data for create new Finances",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/interfaces.InputFinances"
                        }
                    },
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Auth Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of All Assets",
                        "schema": {
                            "$ref": "#/definitions/db.Finances"
                        }
                    }
                }
            }
        },
        "/api/finances/{id}": {
            "get": {
                "description": "Retrieve an Finances by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Finances"
                ],
                "summary": "Retrieve Finances by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Finances ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Auth Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Finances Details",
                        "schema": {
                            "$ref": "#/definitions/db.Finances"
                        }
                    }
                }
            }
        },
        "/api/health": {
            "post": {
                "description": "Create New Health",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Create New Health",
                "parameters": [
                    {
                        "description": "Data for create new Health",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/interfaces.InputHealth"
                        }
                    },
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Auth Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of All Health",
                        "schema": {
                            "$ref": "#/definitions/db.Health"
                        }
                    }
                }
            }
        },
        "/api/health/{id}": {
            "get": {
                "description": "Retrieve an health by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Retrieve health by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "health ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Auth Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Health Details",
                        "schema": {
                            "$ref": "#/definitions/db.Health"
                        }
                    }
                }
            }
        },
        "/api/mental": {
            "put": {
                "description": "Retrieve an mental by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mental"
                ],
                "summary": "Retrieve mental by ID",
                "parameters": [
                    {
                        "description": "Edit mental",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/interfaces.InputMentalEdit"
                        }
                    },
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Auth Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "mental Details",
                        "schema": {
                            "$ref": "#/definitions/db.Mental"
                        }
                    }
                }
            },
            "post": {
                "description": "Create New Mental",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mental"
                ],
                "summary": "Create New Mental",
                "parameters": [
                    {
                        "description": "Data for create new Mental",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/interfaces.InputMental"
                        }
                    },
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Auth Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of All Mental",
                        "schema": {
                            "$ref": "#/definitions/db.Mental"
                        }
                    }
                }
            }
        },
        "/api/mental/{id}": {
            "get": {
                "description": "Retrieve an mental by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mental"
                ],
                "summary": "Retrieve mental by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "mental ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Auth Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "mental Details",
                        "schema": {
                            "$ref": "#/definitions/db.Mental"
                        }
                    }
                }
            }
        },
        "/api/test-token": {
            "post": {
                "description": "Cria um toke para auth do usuario",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Test Token",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Token de autenticação",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "token make:",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/upload": {
            "post": {
                "description": "Uploads a PDF file, extracts its text, and saves the extracted text",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PDF"
                ],
                "summary": "Upload a PDF file and extract text",
                "parameters": [
                    {
                        "type": "file",
                        "description": "PDF file",
                        "name": "pdf",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Auth Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/user": {
            "put": {
                "description": "Retrieve an User by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Retrieve User by ID",
                "parameters": [
                    {
                        "description": "Edit User",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/interfaces.InputUserEdit"
                        }
                    },
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Auth Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Details",
                        "schema": {
                            "$ref": "#/definitions/db.User"
                        }
                    }
                }
            },
            "post": {
                "description": "Create New User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create New User",
                "parameters": [
                    {
                        "description": "Data for create new User",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/interfaces.InputUser"
                        }
                    },
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Auth Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of All User",
                        "schema": {
                            "$ref": "#/definitions/db.User"
                        }
                    }
                }
            }
        },
        "/api/user/{id}": {
            "get": {
                "description": "Retrieve an User by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Retrieve User by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Auth Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Details",
                        "schema": {
                            "$ref": "#/definitions/db.User"
                        }
                    }
                }
            }
        },
        "/api/welfare": {
            "put": {
                "description": "Retrieve an welfare by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Welfare"
                ],
                "summary": "Retrieve welfare by ID",
                "parameters": [
                    {
                        "description": "Edit welfare",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/interfaces.InputWelfareEdit"
                        }
                    },
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Auth Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "welfare Details",
                        "schema": {
                            "$ref": "#/definitions/db.Welfare"
                        }
                    }
                }
            },
            "post": {
                "description": "Create New welfare",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Welfare"
                ],
                "summary": "Create New welfare",
                "parameters": [
                    {
                        "description": "Data for create new welfare",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/interfaces.InputWelfare"
                        }
                    },
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Auth Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of All welfare",
                        "schema": {
                            "$ref": "#/definitions/db.Welfare"
                        }
                    }
                }
            }
        },
        "/api/welfare/{id}": {
            "get": {
                "description": "Retrieve an welfare by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Welfare"
                ],
                "summary": "Retrieve welfare by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "welfare ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Auth Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "welfare Details",
                        "schema": {
                            "$ref": "#/definitions/db.Welfare"
                        }
                    }
                }
            }
        },
        "/token": {
            "get": {
                "description": "Cria um toke para auth do usuario",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Criar token de auth",
                "responses": {
                    "200": {
                        "description": "token make:",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "db.Finances": {
            "type": "object",
            "properties": {
                "aliment": {
                    "type": "number"
                },
                "best": {
                    "type": "number"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "life": {
                    "type": "number"
                },
                "score": {
                    "type": "number"
                },
                "service": {
                    "type": "number"
                },
                "shopping": {
                    "type": "number"
                },
                "transport": {
                    "type": "number"
                },
                "userid": {
                    "type": "integer"
                }
            }
        },
        "db.Health": {
            "type": "object",
            "properties": {
                "best": {
                    "type": "integer"
                },
                "calories_burned": {
                    "type": "integer"
                },
                "date": {
                    "type": "string"
                },
                "goal_calories": {
                    "type": "integer"
                },
                "healthy_food": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "score": {
                    "type": "number"
                },
                "unhealthy_food": {
                    "type": "integer"
                },
                "userid": {
                    "type": "integer"
                }
            }
        },
        "db.Mental": {
            "type": "object",
            "properties": {
                "best": {
                    "type": "integer"
                },
                "date": {
                    "type": "string"
                },
                "depression_score": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "mindfulness_score": {
                    "type": "integer"
                },
                "quality_of_sleep": {
                    "type": "integer"
                },
                "score": {
                    "type": "number"
                },
                "smoking_frequency": {
                    "type": "integer"
                },
                "stress_score": {
                    "type": "integer"
                },
                "userid": {
                    "type": "integer"
                }
            }
        },
        "db.User": {
            "type": "object",
            "properties": {
                "bmi": {
                    "type": "number"
                },
                "email": {
                    "type": "string"
                },
                "finances": {
                    "type": "number"
                },
                "health": {
                    "type": "number"
                },
                "height": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "mental": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "score": {
                    "type": "number"
                },
                "weight": {
                    "type": "number"
                },
                "welfare": {
                    "type": "number"
                }
            }
        },
        "db.Welfare": {
            "type": "object",
            "properties": {
                "best": {
                    "type": "integer"
                },
                "date": {
                    "type": "string"
                },
                "goal_hours_slept": {
                    "type": "number"
                },
                "goal_steps": {
                    "type": "integer"
                },
                "hours_slept": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "max_smoking_frequency": {
                    "type": "integer"
                },
                "score": {
                    "type": "number"
                },
                "smoking_frequency": {
                    "type": "integer"
                },
                "steps": {
                    "type": "integer"
                },
                "userid": {
                    "type": "integer"
                }
            }
        },
        "interfaces.InputBMI": {
            "type": "object",
            "properties": {
                "bmi": {
                    "type": "number"
                }
            }
        },
        "interfaces.InputFinances": {
            "type": "object",
            "properties": {
                "aliment": {
                    "type": "number"
                },
                "best": {
                    "type": "number"
                },
                "life": {
                    "type": "number"
                },
                "score": {
                    "type": "number"
                },
                "service": {
                    "type": "number"
                },
                "shopping": {
                    "type": "number"
                },
                "transport": {
                    "type": "number"
                },
                "userid": {
                    "type": "integer"
                }
            }
        },
        "interfaces.InputFinancesEdit": {
            "type": "object",
            "properties": {
                "aliment": {
                    "type": "number"
                },
                "best": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "life": {
                    "type": "number"
                },
                "score": {
                    "type": "number"
                },
                "service": {
                    "type": "number"
                },
                "shopping": {
                    "type": "number"
                },
                "transport": {
                    "type": "number"
                },
                "userid": {
                    "type": "integer"
                }
            }
        },
        "interfaces.InputHealth": {
            "type": "object",
            "properties": {
                "best": {
                    "type": "integer"
                },
                "calories_burned": {
                    "type": "integer"
                },
                "goal_calories": {
                    "type": "integer"
                },
                "healthy_food": {
                    "type": "integer"
                },
                "score": {
                    "type": "number"
                },
                "unhealthy_food": {
                    "type": "integer"
                },
                "userid": {
                    "type": "integer"
                }
            }
        },
        "interfaces.InputHealthEdit": {
            "type": "object",
            "properties": {
                "best": {
                    "type": "integer"
                },
                "calories_burned": {
                    "type": "integer"
                },
                "goal_calories": {
                    "type": "integer"
                },
                "healthy_food": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "score": {
                    "type": "number"
                },
                "unhealthy_food": {
                    "type": "integer"
                },
                "userid": {
                    "type": "integer"
                }
            }
        },
        "interfaces.InputMental": {
            "type": "object",
            "properties": {
                "best": {
                    "type": "integer"
                },
                "depression_score": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "mindfulness_score": {
                    "type": "integer"
                },
                "quality_of_sleep": {
                    "type": "integer"
                },
                "score": {
                    "type": "number"
                },
                "smoking_frequency": {
                    "type": "integer"
                },
                "stress_score": {
                    "type": "integer"
                },
                "userid": {
                    "type": "integer"
                }
            }
        },
        "interfaces.InputMentalEdit": {
            "type": "object",
            "properties": {
                "best": {
                    "type": "integer"
                },
                "depression_score": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "mindfulness_score": {
                    "type": "integer"
                },
                "quality_of_sleep": {
                    "type": "integer"
                },
                "score": {
                    "type": "number"
                },
                "smoking_frequency": {
                    "type": "integer"
                },
                "stress_score": {
                    "type": "integer"
                },
                "userid": {
                    "type": "integer"
                }
            }
        },
        "interfaces.InputUser": {
            "type": "object",
            "properties": {
                "bmi": {
                    "type": "number"
                },
                "email": {
                    "type": "string"
                },
                "height": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "weight": {
                    "type": "number"
                }
            }
        },
        "interfaces.InputUserEdit": {
            "type": "object",
            "properties": {
                "bmi": {
                    "type": "number"
                },
                "email": {
                    "type": "string"
                },
                "finances": {
                    "type": "number"
                },
                "health": {
                    "type": "number"
                },
                "height": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "mental": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "score": {
                    "type": "number"
                },
                "weight": {
                    "type": "number"
                },
                "welfare": {
                    "type": "number"
                }
            }
        },
        "interfaces.InputWelfare": {
            "type": "object",
            "properties": {
                "best": {
                    "type": "integer"
                },
                "goal_hours_slept": {
                    "type": "number"
                },
                "goal_steps": {
                    "type": "integer"
                },
                "hours_slept": {
                    "type": "number"
                },
                "max_smoking_frequency": {
                    "type": "integer"
                },
                "score": {
                    "type": "number"
                },
                "smoking_frequency": {
                    "type": "integer"
                },
                "steps": {
                    "type": "integer"
                },
                "userid": {
                    "type": "integer"
                }
            }
        },
        "interfaces.InputWelfareEdit": {
            "type": "object",
            "properties": {
                "best": {
                    "type": "integer"
                },
                "goal_hours_slept": {
                    "type": "number"
                },
                "goal_steps": {
                    "type": "integer"
                },
                "hours_slept": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "max_smoking_frequency": {
                    "type": "integer"
                },
                "score": {
                    "type": "number"
                },
                "smoking_frequency": {
                    "type": "integer"
                },
                "steps": {
                    "type": "integer"
                },
                "userid": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "3.145.165.61:8080",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Peru",
	Description:      "This is a server for app.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
